---
# This role will install MySQL and create db user and give permissions.

- name: Import a key from a url
  ansible.builtin.rpm_key:
    state: present
    key: https://downloads.mariadb.com/MariaDB/MariaDB-Server-GPG-KEY

- name: Install MariaDB Repo
  template:
    src: mariadb.repo.j2
    dest: /etc/yum.repos.d/mariadb.repo

- name: Install MariaDB packages and Python bindings
  yum:
    name:
      - MariaDB-server 
      # - MariaDB-client 
      - MariaDB-backup
      - MySQL-python
    state: present

- name: Configure SELinux to start mysql on any port
  seboolean: 
    name: mysql_connect_any 
    state: true 
    persistent: yes
  when: sestatus.rc != 0

- name: Create MariaDB server configuration file
  template: 
    src: my.cnf.j2
    dest: /etc/my.cnf.d/server.cnf
  notify:
  - restart mariadb

- name: Copy MariaDB umask.conf
  ansible.builtin.copy:
    src: umask.conf
    dest: /etc/systemd/system/mariadb.service.d/umask.conf
  notify:
  - restart mariadb

- name: Setup MariaDB Data permissions
  ansible.builtin.file:
    path: /var/lib/mysql
    state: directory
    recurse: yes
    mode: 'g+rX'

- name: Start MariaDB Service
  service: 
    name: mariadb
    state: started 
    enabled: yes

# mysql_secure_installation
- name: Set MariaDB root password
  mysql_user:
    name: 'root'
    host_all: true
    password: '{{ mysql_root_password | mandatory }}'
    state: present
  # when: not mysql_root_configured

- name: Create MariaDB client config for root user
  template: 
    src: my_root.cnf.j2
    dest: /root/.my.cnf
    mode: '0600'

- name: Remove test database from MariaDB
  mysql_db:
    name: test
    state: absent

- name: Remove anonymous users from MariaDB
  mysql_user:
    name: ''
    state: absent
    host_all: true

- name: Remove remote root login from MariaDB
  community.mysql.mysql_query:
    query:
      - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')

- name: Create Slave DB User
  mysql_user:
    name: '{{ mysql_slave_user }}'
    password: '{{ mysql_slave_password }}'
    priv: '*.*:REPLICATION SLAVE'
    host: '%' 
    state: present
  when: "'dbservers' in group_names"

- name: Create database user with name 'backup'
  community.mysql.mysql_user:
    name: '{{ mysql_backup_user }}'
    password: '{{ mysql_backup_password }}'
    priv: '*.*:SELECT,SHOW VIEW,LOCK TABLES,RELOAD,REPLICATION CLIENT,PROCESS'
    state: present