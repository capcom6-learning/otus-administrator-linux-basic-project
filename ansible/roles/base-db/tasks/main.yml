---
# This role will install MySQL and create db user and give permissions.

# - name: Install MariaDB Repo
#   ansible.builtin.shell: curl -LsS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | sudo bash -s -- --mariadb-server-version="{{ mariadb_version }}"

- name: Import a key from a url
  ansible.builtin.rpm_key:
    state: present
    key: https://downloads.mariadb.com/MariaDB/MariaDB-Server-GPG-KEY

- name: Install MariaDB Repo
  template:
    src: mariadb.repo.j2
    dest: /etc/yum.repos.d/mariadb.repo

- name: Install Mysql package
  yum:
    name:
      - MariaDB-server 
      # - MariaDB-client 
      - MariaDB-backup
      - MySQL-python
    state: present

- name: Configure SELinux to start mysql on any port
  seboolean: 
    name: mysql_connect_any 
    state: true 
    persistent: yes
  when: sestatus.rc != 0

- name: Create Mysql configuration file
  template: 
    src: my.cnf.j2
    dest: /etc/my.cnf.d/server.cnf
  notify:
  - restart mariadb

- name: Start Mysql Service
  service: 
    name: mariadb
    state: started 
    enabled: yes

# - name: Check is root password configured
#   stat:
#     path: /root/.my.cnf
#   register: mysql_root_configured

# mysql_secure_installation
- name: root password is present
  mysql_user:
    name: 'root'
    host_all: true
    password: '{{ mysql_root_password | mandatory }}'
    state: present
  # when: not mysql_root_configured

- name: Create Mysql configuration file
  template: 
    src: my_root.cnf.j2
    dest: /root/.my.cnf
    mode: '0600'

- name: test database is absent
  mysql_db:
    name: test
    state: absent

- name: anonymous users are absent
  mysql_user:
    name: ''
    state: absent
    host_all: true

- name: remove remote root
  community.mysql.mysql_query:
    query:
      - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')

- name: Create Slave DB User
  mysql_user:
    name: '{{ mysql_slave_user }}'
    password: '{{ mysql_slave_password }}'
    priv: '*.*:REPLICATION SLAVE'
    host: '%' 
    state: present
  when: "'dbservers' in group_names"