# {{ ansible_managed }}
# Manual customization of this file is not recommended.

# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
    - targets: ['localhost:9090']


  - job_name: 'Backend'
    static_configs:
      - targets: {{ groups.webservers | map('extract', hostvars, 'ansible_all_ipv4_addresses') | flatten | ansible.netcommon.ipaddr(network) | map('regex_replace', '$', ':9100') | list | to_json }}

  - job_name: 'Frontend'
    static_configs:
      - targets: {{ groups.lbservers | map('extract', hostvars, 'ansible_all_ipv4_addresses') | flatten | ansible.netcommon.ipaddr(network) | map('regex_replace', '$', ':9100') | list | to_json }}

  - job_name: 'Database servers'
    static_configs:
      - targets: {{ (groups.dbservers + groups.dbslaves) | map('extract', hostvars, 'ansible_all_ipv4_addresses') | flatten | ansible.netcommon.ipaddr(network) | map('regex_replace', '$', ':9100') | list | to_json }}

  - job_name: 'Self-monitoring'
    static_configs:
      - targets: {{ groups.monitoring | map('extract', hostvars, 'ansible_all_ipv4_addresses') | flatten | ansible.netcommon.ipaddr(network) | map('regex_replace', '$', ':9100') | list | to_json }}
